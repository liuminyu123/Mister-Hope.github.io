(window.webpackJsonp=window.webpackJsonp||[]).push([[658],{1252:function(v,_,t){"use strict";t.r(_);var o=t(3),d=Object(o.a)({},(function(){var v=this,_=v.$createElement,t=v._self._c||_;return t("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[t("p",[v._v("在小程序中所有页面的路由全部由框架进行管理。")]),v._v(" "),t("h2",{attrs:{id:"页面栈"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#页面栈"}},[v._v("#")]),v._v(" 页面栈 "),t("MyBadge",{attrs:{text:"重要",type:"error"}})],1),v._v(" "),t("p",[v._v("框架以栈的形式维护了当前的所有页面。当发生路由切换的时候，页面栈的表现如下:")]),v._v(" "),t("table",[t("thead",[t("tr",[t("th",[v._v("路由方式")]),v._v(" "),t("th",[v._v("页面栈表现")])])]),v._v(" "),t("tbody",[t("tr",[t("td",[v._v("初始化")]),v._v(" "),t("td",[v._v("新页面入栈")])]),v._v(" "),t("tr",[t("td",[v._v("打开新页面")]),v._v(" "),t("td",[v._v("新页面入栈")])]),v._v(" "),t("tr",[t("td",[v._v("页面重定向")]),v._v(" "),t("td",[v._v("当前页面出栈，新页面入栈")])]),v._v(" "),t("tr",[t("td",[v._v("页面返回")]),v._v(" "),t("td",[v._v("页面不断出栈，直到目标返回页")])]),v._v(" "),t("tr",[t("td",[v._v("Tab 切换")]),v._v(" "),t("td",[v._v("页面全部出栈，只留下新的 Tab 页面")])]),v._v(" "),t("tr",[t("td",[v._v("重加载")]),v._v(" "),t("td",[v._v("页面全部出栈，只留下新的页面")])])])]),v._v(" "),t("p",[v._v("开发者可以使用 "),t("code",[v._v("getCurrentPages()")]),v._v(" 函数获取当前页面栈。")]),v._v(" "),t("h2",{attrs:{id:"路由方式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#路由方式"}},[v._v("#")]),v._v(" 路由方式 "),t("MyBadge",{attrs:{text:"重要",type:"error"}})],1),v._v(" "),t("p",[v._v("对于路由的触发方式以及页面生命周期函数如下:")]),v._v(" "),t("table",[t("thead",[t("tr",[t("th",[v._v("路由方式")]),v._v(" "),t("th",[v._v("触发时机")]),v._v(" "),t("th",[v._v("路由前页面")]),v._v(" "),t("th",[v._v("路由后页面")])])]),v._v(" "),t("tbody",[t("tr",[t("td",[v._v("初始化")]),v._v(" "),t("td",[v._v("小程序打开的第一个页面")]),v._v(" "),t("td"),v._v(" "),t("td",[v._v("onLoad, onShow")])]),v._v(" "),t("tr",[t("td",[v._v("打开新页面")]),v._v(" "),t("td",[v._v("调用 API "),t("code",[v._v("wx.navigateTo")]),t("br"),v._v("使用组件 "),t("code",[v._v('<navigator open-type="navigateTo"/>')])]),v._v(" "),t("td",[v._v("onHide")]),v._v(" "),t("td",[v._v("onLoad, onShow")])]),v._v(" "),t("tr",[t("td",[v._v("页面重定向")]),v._v(" "),t("td",[v._v("调用 API "),t("code",[v._v("wx.redirectTo")]),t("br"),v._v("使用组件 "),t("code",[v._v('<navigator open-type="redirectTo"/>')])]),v._v(" "),t("td",[v._v("onUnload")]),v._v(" "),t("td",[v._v("onLoad, onShow")])]),v._v(" "),t("tr",[t("td",[v._v("页面返回")]),v._v(" "),t("td",[v._v("调用 API "),t("code",[v._v("wx.navigateBack")]),t("br"),v._v("使用组件 "),t("code",[v._v('<navigator open-type="navigateBack">')])]),v._v(" "),t("td",[v._v("用户按左上角返回按钮")]),v._v(" "),t("td",[v._v("onUnload")])]),v._v(" "),t("tr",[t("td",[v._v("Tab 切换")]),v._v(" "),t("td",[v._v("调用 API "),t("code",[v._v("wx.switchTab")]),t("br"),v._v("使用组件 "),t("code",[v._v('<navigator open-type="switchTab"/>')])]),v._v(" "),t("td",[v._v("用户切换 Tab")]),v._v(" "),t("td")]),v._v(" "),t("tr",[t("td",[v._v("重启动")]),v._v(" "),t("td",[v._v("调用 API "),t("code",[v._v("wx.reLaunch")]),t("br"),v._v("使用组件 "),t("code",[v._v('<navigator open-type="reLaunch"/>')])]),v._v(" "),t("td",[v._v("onUnload")]),v._v(" "),t("td",[v._v("onLoad, onShow")])])])]),v._v(" "),t("p",[v._v("Tab 切换对应的生命周期(以 A、B 页面为 Tabbar 页面，C 是从 A 页面打开的页面，D 页面是从 C 页面打开的页面为例):")]),v._v(" "),t("table",[t("thead",[t("tr",[t("th",[v._v("当前页面")]),v._v(" "),t("th",[v._v("路由后页面")]),v._v(" "),t("th",[v._v("触发的生命周期(按顺序)")])])]),v._v(" "),t("tbody",[t("tr",[t("td",[v._v("A")]),v._v(" "),t("td",[v._v("A")]),v._v(" "),t("td",[v._v("Nothing happened")])]),v._v(" "),t("tr",[t("td",[v._v("A")]),v._v(" "),t("td",[v._v("B")]),v._v(" "),t("td",[v._v("A.onHide(), B.onLoad(), B.onShow()")])]),v._v(" "),t("tr",[t("td",[v._v("A")]),v._v(" "),t("td",[v._v("B(再次打开)")]),v._v(" "),t("td",[v._v("A.onHide(), B.onShow()")])]),v._v(" "),t("tr",[t("td",[v._v("C")]),v._v(" "),t("td",[v._v("A")]),v._v(" "),t("td",[v._v("C.onUnload(), A.onShow()")])]),v._v(" "),t("tr",[t("td",[v._v("C")]),v._v(" "),t("td",[v._v("B")]),v._v(" "),t("td",[v._v("C.onUnload(), B.onLoad(), B.onShow()")])]),v._v(" "),t("tr",[t("td",[v._v("D")]),v._v(" "),t("td",[v._v("B")]),v._v(" "),t("td",[v._v("D.onUnload(), C.onUnload(), B.onLoad(), B.onShow()")])]),v._v(" "),t("tr",[t("td",[v._v("D(从转发进入)")]),v._v(" "),t("td",[v._v("A")]),v._v(" "),t("td",[v._v("D.onUnload(), A.onLoad(), A.onShow()")])]),v._v(" "),t("tr",[t("td",[v._v("D(从转发进入)")]),v._v(" "),t("td",[v._v("B")]),v._v(" "),t("td",[v._v("D.onUnload(), B.onLoad(), B.onShow()")])])])]),v._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"custom-block-title"},[v._v("提示")]),v._v(" "),t("ul",[t("li",[t("code",[v._v("navigateTo")]),v._v(", "),t("code",[v._v("redirectTo")]),v._v(" 只能打开非 tabBar 页面。")]),v._v(" "),t("li",[t("code",[v._v("switchTab")]),v._v(" 只能打开 tabBar 页面。")]),v._v(" "),t("li",[t("code",[v._v("reLaunch")]),v._v(" 可以打开任意页面。")]),v._v(" "),t("li",[v._v("页面底部的 tabBar 由页面决定，即只要是定义为 tabBar 的页面，底部都有 tabBar。")]),v._v(" "),t("li",[v._v("调用页面路由带的参数可以在目标页面的 "),t("code",[v._v("onLoad")]),v._v(" 中获取。")])])])])}),[],!1,null,null,null);_.default=d.exports}}]);